version: '3'

services:
  load-balancer:
    image: "nginx:1.23.2"
    ports:
      - 443:443
    restart: on-failure
    depends_on:
      - front-end
      - back-end
      - websocket-server
      - peerjs
    volumes:
      - ./docker/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro

  front-end:
    image: "front-end:prod"
    build:
      context: "."
      dockerfile: "./docker/Dockerfile.front-end"
    restart: on-failure
    depends_on:
      - back-end
      - peerjs
      - websocket-server

  db-updater:
    image: "db-updater:prod"
    build:
      context: "."
      dockerfile: "./docker/Dockerfile.db-updater"
    restart: on-failure
    depends_on:
      - database
    volumes:
      - ./docker/conf/dbConfig.js:/build/back-end/src/config/dbConfig.js:ro

  back-end:
    image: "back-end:prod"
    build:
      context: "."
      dockerfile: "./docker/Dockerfile.back-end"
    restart: on-failure
    depends_on:
      - database
      - websocket-server
    volumes:
      - ./docker/conf/dbConfig.js:/build/back-end/src/config/dbConfig.js:ro

  peerjs:
    build:
      context: "."
      dockerfile: "./docker/Dockerfile.peerjs"
    restart: on-failure
    ports:
      - 3001:3001

  database:
    image: "mysql:8.0.31"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: "test"
      MYSQL_DATABASE: "study_hero"
    volumes:
      - ./docker/conf/schema.sql:/docker-entrypoint-initdb.d/1.sql:ro
    ports:
      - 3307:3306

  websocket-server:
    build:
      context: "."
      dockerfile: "./docker/Dockerfile.websocket-server"
    restart: on-failure
    volumes:
      - ./docker/conf/websocket-server.conf.json:/build/websocket-server/build/config.json:ro
